<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mypageSQL">
	<select id="getMypageMyInfo" parameterType="String" resultType="member">
		select * from milkymember where id=#{id}
	</select>
	
	<select id="mypagePwdCheck" parameterType="member" resultType="member">
		select * from milkymember where id=#{id}
	</select>
	
	<update id="mypageMyInfoUpdate" parameterType="member">
		update milkymember set nickname=#{nickname},
							   pwd=#{pwd}, 
							   tel1=#{tel1},
							   tel2=#{tel2},
							   tel3=#{tel3},
							   email1=#{email1},
							   email2=#{email2},
							   idPwdQuestion=#{idPwdQuestion},
							   idPwdAnswer=#{idPwdAnswer}
		where id=#{id}
	</update>
	
	<delete id="mypageMyInfoDelete" parameterType="String">
		delete milkymember where id=#{id}
	</delete>
	
	<select id="getQnaTotalA" parameterType="String" resultType="int">
		select count(*) from milkyqna where id=#{id}
	</select>
	
	<select id="getMyQnaList" parameterType="java.util.Map" resultType="qnaBoard">
		select * from (select rownum rn, a.* from 
		(select qnacode, qnaquestiontype, qnasubject, id, qnacontent, qnapwd, qnahit, 
		qnaimage1, qnaimage2, qnaanswercheck, to_char(qnadate, 'yyyy-mm-dd')
		 "qnadate" from milkyqna order by qnaCode desc) a)
		  where rn between #{startNum} and #{endNum} and id=#{id}
	</select>
	
	<select id="getMyQnaView" parameterType="String" resultType="qnaBoard">
		select qnaCode, qnaQuestionType, qnaSubject, id, qnaContent, qnaHit,
				to_char(qnaDate, 'yyyy-mm-dd') "qnaDate", qnAImage1, qnAImage2, qnaAnswerCheck
		from milkyQnA 
		where qnaCode=#{qnaCode} order by qnaCode desc
	</select>
	
	<update id="updateMyQnaView" parameterType="qnaBoard">
		update milkyqna set qnaQuestionType=#{qnaQuestionType},
							   qnaSubject=#{qnaSubject}, 
							   qnaContent=#{qnaContent}
		where qnaCode=#{qnaCode}
	</update>
	
	<select id="getMyQnaComment" parameterType="int" resultType="comment">
		select * from milkycomment where qnacode=#{qnaCode} order by commentCode desc
	</select>
	
	<delete id="deleteMyQnaView" parameterType="int">
		delete milkyqna where qnaCode=#{qnaCode}
	</delete>
	
	<insert id="mypageShpMngWrite" parameterType="shipment">
		insert into milkyShipment values(milkyShipmentSeq.nextval, #{id}, #{shipNickname}, #{shipReceiver}, #{shipTel1}, #{shipTel2}, #{shipTel3}, #{shipZipcode}, #{shipAddr1}, #{shipAddr2}, #{baseShip})
	</insert>
	
	<select id="getPaymentList" parameterType="String" resultType="payment">
		select paymentCode, id, paymentMethod, shipPay, deliveryInfo, payDate, paymentSavedMoney,
		newSavedMoney, paymentCoupon, productCode, productOption, payQty, payPrice, payRate
			from milkyPayment
			join milkyPaymentOption using(paymentCode)
		where id=#{id}
		order by paymentCode desc
	</select>
	
	<select id="getShoppingList" parameterType="String" resultType="shopping">
		select paymentCode, productCode, productImageName
		    from milkyPayment
		    join milkyPaymentOption using(paymentCode)
		    join milkyProductImage using(productCode)
		where id=#{id}
		order by paymentCode desc, productImageName asc
	</select>
	
	<select id="countCoupon" parameterType="String" resultType="int">
		select count(*) from milkyMemberBenefit where id=#{id}
	</select>
	
	<select id="countPayment" parameterType="String" resultType="int">
		select count(*) from milkyPayment where id=#{id}
	</select>
	
	<select id="getOrderTotalA" parameterType="String" resultType="int">
		select count(*) from milkyPayment where id=#{id}
	</select>
	
	<select id="getPaymentList2" parameterType="java.util.Map" resultType="payment">
		select * from (select rownum rn, tt.* from
		    (select paymentCode, id, paymentMethod, shipPay, deliveryInfo, payDate, paymentSavedMoney,
		        newSavedMoney, paymentCoupon, productCode, productOption, payQty, payPrice, payRate
		    from milkyPayment
		    join milkyPaymentOption using(paymentCode)
		    where id='lily11'
		    order by paymentCode desc) tt)
		where rn between #{startNum} and #{endNum} and id=#{id}
	</select>
	
	<select id="getShoppingList2" parameterType="java.util.Map" resultType="shopping">
		select * from (select rownum rn, tt.* from
		    (select paymentCode, productCode, productImageName
		        from milkyPayment
		        join milkyPaymentOption using(paymentCode)
		        join milkyProductImage using(productCode)
		    where id=#{id}
		    order by paymentCode desc, productImageName asc) tt)
		where rn between #{startNum} and #{endNum} and id=#{id}
	</select>
	
	<select id="getPaymentDTO" parameterType="String" resultType="payment">
		select paymentCode, paymentMethod, shipPay, deliveryInfo, payDate, paymentSavedMoney, newSavedMoney, paymentCoupon,
		    productCode, productOption, payQty, payPrice, payRate,
		    payShipNickname, payShipReceiver, payShipTel1, payShipTel2, payShipTel3, payShipZipcode, payShipAddr1, payShipAddr2
		from milkyPayment 
		join milkyPaymentOption using(paymentCode)
		join milkyPaymentShip using(paymentCode)
		where paymentCode=#{paymentCode}
	</select>
</mapper>